generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id
  name          String
  email         String     @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  accounts      Account[]
  children      Children[]
  sessions      Session[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Children {
  id                       String                          @id @default(uuid())
  name                     String
  rollno                   String
  dateOfBirth              DateTime                        @db.Date
  createdAt                DateTime                        @default(now())
  updatedAt                DateTime                        @default(now())
  gender                   String                          @db.VarChar(10)
  teacherId                String
  testsTaken               Int?                            @default(0)
  auditoryMemoryTests      AuditoryMemoryTestResult[]      @relation("ChildrenAuditoryMemoryTests")
  teacher                  User                            @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  continuousAssessments    ContinuousAssessment[]          @relation("ChildrenContinuousAssessments")
  graphemeTests            GraphemeTestResult[]            @relation("ChildrenGraphemeTests")
  pictureTests             PictureTestResult[]             @relation("ChildrenPictureTests")
  readingProficiencyTests  ReadingProficiencyTestResult[]  @relation("ChildrenReadingProficiencyTests")
  sequenceTests            SequenceTestResult[]            @relation("ChildrenSequenceTests")
  soundBlendingTests       SoundBlendingResult[]           @relation("ChildrenSoundBlendingTests")
  soundDiscriminationTests SoundDiscriminationTestResult[] @relation("ChildrenSoundDiscriminationTests")
  symbolSequenceTests      SymbolSequenceResult[]          @relation("ChildrenSymbolSequenceTests")
  visualTests              VisualTestResult[]              @relation("ChildrenVisualTests")
  vocabularyTests          VocabularyTestResult[]          @relation("ChildrenVocabularyTests")
  formResponses            ChildFormResponse[]             @relation("ChildrenFormResponses")
  formAnalysis             ChildFormAnalysis[]             @relation("ChildrenFormAnalysis")
  formAnalysisNew          ChildFormAnalysisnew[]          @relation("ChildrenFormAnalysisNew")

  @@map("children")
}

model ChildFormResponse {
  id          String                @id @default(uuid())
  childId     String
  child       Children              @relation("ChildrenFormResponses", fields: [childId], references: [id], onDelete: Cascade)
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @default(now())
  responses   Json
  formVersion String
  analysis    ChildFormAnalysis?    @relation("FormResponseAnalysis")
  analysisNew ChildFormAnalysisnew? @relation("FormResponseAnalysisNew")

  @@map("child_form_responses")
}

model VisualTestResult {
  id        String    @id @default(uuid())
  childId   String?
  createdAt DateTime  @default(now())
  testName  String?   @default("Visual Discrimination Test")
  options   String
  score     Decimal?  @db.Decimal(5, 2)
  child     Children? @relation("ChildrenVisualTests", fields: [childId], references: [id], onDelete: Cascade)

  @@map("visual_test_results")
}

model VocabularyTestResult {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  childId   String?
  responses String?
  score     Decimal?  @db.Decimal(5, 2)
  testName  String?
  child     Children? @relation("ChildrenVocabularyTests", fields: [childId], references: [id])

  @@map("vocabulary_test_results")
}

model SymbolSequenceResult {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  childId     String?
  difficulty  String?
  level       Decimal?  @db.Decimal(5, 2)
  score       Decimal?  @db.Decimal(5, 2)
  totalRounds Decimal?  @db.Decimal(5, 2)
  testName    String?
  child       Children? @relation("ChildrenSymbolSequenceTests", fields: [childId], references: [id])

  @@map("symbol_sequence_results")
}

model SoundBlendingResult {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  childId    String?
  totalScore Decimal?  @db.Decimal(5, 2)
  score      Decimal?  @db.Decimal(5, 2)
  responses  String?
  testName   String?
  child      Children? @relation("ChildrenSoundBlendingTests", fields: [childId], references: [id])

  @@map("sound_blending_results")
}

model SequenceTestResult {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  childId   String?
  score     Decimal?  @db.Decimal(5, 2)
  testName  String?
  child     Children? @relation("ChildrenSequenceTests", fields: [childId], references: [id])

  @@map("sequence_test_results")
}

model AuditoryMemoryTestResult {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  childId        String?
  score          Decimal?  @db.Decimal(5, 2)
  forwardCorrect Decimal?  @db.Decimal(5, 2)
  reverseCorrect Decimal?  @db.Decimal(5, 2)
  testName       String?
  child          Children? @relation("ChildrenAuditoryMemoryTests", fields: [childId], references: [id])

  @@map("auditory_memory_test_results")
}

model SoundDiscriminationTestResult {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  childId   String?
  score     Decimal?  @db.Decimal(5, 2)
  testName  String?
  child     Children? @relation("ChildrenSoundDiscriminationTests", fields: [childId], references: [id])

  @@map("sound_discrimination_test_results")
}

model ReadingProficiencyTestResult {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  childId        String?
  spokenWords    String?
  correctWords   String?
  incorrectWords String?
  score          Decimal?  @db.Decimal(5, 2)
  testName       String?
  child          Children? @relation("ChildrenReadingProficiencyTests", fields: [childId], references: [id])

  @@map("reading_proficiency_test_results")
}

model PictureTestResult {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  score     Decimal?  @db.Decimal(5, 2)
  childId   String?
  testName  String?
  responses String?
  child     Children? @relation("ChildrenPictureTests", fields: [childId], references: [id])

  @@map("picture_test_results")
}

model GraphemeTestResult {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  childId   String?
  results   String?
  score     Decimal?  @db.Decimal(5, 2)
  testName  String?
  child     Children? @relation("ChildrenGraphemeTests", fields: [childId], references: [id])

  @@map("grapheme_test_results")
}

model ContinuousAssessment {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  childId     String?
  totalScore  Decimal?  @db.Decimal(5, 2)
  testResults String?
  analysis    String?
  child       Children? @relation("ChildrenContinuousAssessments", fields: [childId], references: [id])

  @@map("continuous_assessments")
}

model ChildFormAnalysis {
  id                 String            @id @default(uuid())
  childId            String
  child              Children          @relation("ChildrenFormAnalysis", fields: [childId], references: [id], onDelete: Cascade)
  formResponseId     String            @unique
  formResponse       ChildFormResponse @relation("FormResponseAnalysis", fields: [formResponseId], references: [id], onDelete: Cascade)
  overallAssessment  String
  strengths          Json // Array of strengths
  areasOfConcern     Json // Array of areas needing attention
  learningStyle      String
  recommendations    Json // Object with forParents and forTeachers arrays
  riskFactors        Json // Array of risk factors
  positiveIndicators Json // Array of positive indicators
  nextSteps          Json // Array of suggested next steps
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @default(now())

  @@map("child_form_analysis")
}

model ChildFormAnalysisnew {
  id                                   String            @id @default(uuid())
  childId                              String
  child                                Children          @relation("ChildrenFormAnalysisNew", fields: [childId], references: [id], onDelete: Cascade)
  formResponseId                       String            @unique
  formResponse                         ChildFormResponse @relation("FormResponseAnalysisNew", fields: [formResponseId], references: [id], onDelete: Cascade)
  developmentalMilestones              String? // Overview of developmental milestones appropriate for the child's age
  questionnaireInterpretation          String? // Interpretation of questionnaire results, highlighting areas of concern
  furtherAssessmentRecommendations     String? // Recommendations for further assessment or intervention strategies
  parentSupportSuggestions             String? // Suggestions for parents on how to support their child's development at home
  psychologicalFrameworks              String? // Relevant psychological theories or frameworks that may apply
  observedSymptoms                     Json? // Specific symptoms or behaviors observed in the child
  questionnaireContext                 String? // Context of the questionnaire (school performance, social interactions)
  previousDiagnoses                    Json? // Any previous diagnoses or assessments the child has undergone
  familyHistory                        String? // Family history of developmental or psychological issues
  culturalEnvironmentalFactors         String? // Cultural or environmental factors that may influence development
  assessmentGoals                      String? // Goals for the assessment
  comdellAnalysis                      Json? // ComDell tool analysis results (if applicable)
  isaaAnalysis                         Json? // ISAA tool analysis results (if applicable)
  winnieDunnAssessment                 Json? // Winnie Dunn assessment tool results
  sensorySeekingScore                  Float? // Raw score for sensory seeking
  sensoryAvoidingScore                 Float? // Raw score for sensory avoiding
  sensorySensitivityScore              Float? // Raw score for sensory sensitivity
  sensoryRegistrationScore             Float? // Raw score for sensory registration
  quadrantGridAnalysis                 Json? // Detailed quadrant grid analysis
  suggestedActivities                  Json? // Suggested activities for each sensory category
  environmentalModifications           Json? // Necessary environmental modifications
  sensoryProcessingInterpretation      String? // Interpretation of quadrant grid analysis
  sensoryInterventionPlan              Json? // Intervention plan recommendations
  sensoryFollowUpStrategy              String? // Follow-up strategy to monitor progress
  sensoryFriendlyEnvironmentGuidelines Json? // Guidelines for creating sensory-friendly environments
  parentImplementationStrategies       Json? // Strategies for parents to implement at home
  phonologicalDisorderAssessment       String? // Assessment of phonological disorder
  attentionDifficultiesEvaluation      String? // Evaluation of attention difficulties and sitting tolerance
  dysarthriaAssessment                 String? // Assessment of dysarthria
  voiceDisorderEvaluation              String? // Evaluation of voice disorders
  eyeContactDifficulties               String? // Assessment of eye contact difficulties
  oromotorAssessment                   Json? // Oromotor assessment results including tongue movement and palatal sounds
  speechAssessmentTools                Json? // Recommended assessment tools and methods
  speechTherapyGoals                   Json? // Specific, measurable goals for therapy
  speechActivitiesExercises            Json? // Engaging speech activities and exercises
  speechSupportStrategies              Json? // Strategies for parents and educators
  communicationEnvironmentTips         Json? // Tips for fostering positive communication environment
  earlyInterventionImportance          String? // Importance of early intervention
  speechCaseStudies                    Json? // Examples of successful case studies or interventions
  playBasedLearningIntegration         Json? // Suggestions for integrating play-based learning
  speechParentResources                Json? // Resources for parents (websites, books)
  adhdManagementTechniques             Json? // Techniques for managing ADHD symptoms in speech therapy
  collaborativeApproaches              Json? // Ideas for collaborative approaches with teachers and professionals
  overallAssessment                    String? // Overall assessment summary
  strengths                            Json? // Array of strengths
  areasOfConcern                       Json? // Array of areas needing attention
  learningStyle                        String? // Child's learning style
  recommendations                      Json? // Recommendations for parents and teachers
  riskFactors                          Json? // Array of risk factors
  positiveIndicators                   Json? // Array of positive indicators
  nextSteps                            Json? // Array of suggested next steps
  createdAt                            DateTime          @default(now())
  updatedAt                            DateTime          @default(now())

  @@map("child_form_analysis_new")
}
